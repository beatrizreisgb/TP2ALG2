Não esquecer -----------------------------------------------------------------------
- Alteração do primeiro algoritmo pra identificar quando não funciona
- Pegar só o triângulo superior da matriz de distâncias

Entregas ----------------------------------------------------------------------------
- todos os arquivos fonte
- relatório
- bases de dados sintéticas

* explicitar no relatório as bases usadas
* publicar num repositório

Tarefas -----------------------------------------------------------------------------
-> Implementar os algoritmos 2-aproximados para clusterização

- função de distância de minkowski para p >= 1 (testar obrigatoriamente com p = 1 (manhattan) e p = 2 (euclidiana))

- versão 1: raio ótimo refinado até largura definida -> o número de refinamentos deverá ser variado
entre 1-25%, com pelo menos cinco valores escolhidos nessa faixa. Como sugestão, as escolhas dos valores 
na faixa podem ser feitas tanto de forma linear quanto exponencial.

- versão 2: escolha do centro para maximizar distância entre os centros já escolhidos

- avaliação dos métodos
    - conjunto de dados em https://archive.ics.uci.edu/ml/index.php (10 conjuntos com no mínimo 700 instâncias)
    - bases de dados sintéticas (10 conjunto para cada abordagem)
        - abordagem 1: exemplos em https://scikit-learn.org/stable/auto_examples/cluster/plot_cluster_comparison.html#sphx-glr-auto-examples-cluster-plot-cluster-comparison-py
        - abordagem 2: gerar dados em duas dimensões usando a distribuição normal multivariada
            -> Gerar pontos amostrados em torno do número de centros (médias diferentes para cada centro), controlando o desvio padrão para que a sobreposição
            entre os grupos varie entre inexistente até altamente sobrepostos (gere uma quantidade razoável de pontos em cada centro).

* Para cada conjunto de dados, deverão ser realizados 30 testes/execuções do algoritmo (note que a matriz de
distância deve ser computada uma única vez, pois essa nunca se altera). A cada execução deve-se armazenar o raio da solução
e, também, computar duas medidas clássicas em avaliação de agrupamentos: silhueta e índice de Rand ajustado. Essas
duas últimas métricas não precisam ser implementadas, devendo ser usadas as implementações da biblioteca Scikit Learn 
(https://scikit-learn.org/stable/index.html). 


* Deverão ser armazenados também o tempo de processamento de cada execução

* A título de comparação da qualidade da solução, os experimentos acima deverão ser
repetidos com a implementação do algoritmo K-Means também disponível no Scikit
Learn (https://scikit-learn.org/stable/modules/clustering.html#k-means). Observe que
todas as medidas de desempenho também deverão ser computadas para essa
implementação.

Relatório ----------------------------------------------------------------------------
* os resultados dos experimentos devem ser agregados em uma tabela com as respectivas médias e desvios-padrão por experimento, 
e por algoritmo (parâmetro de largura) 

* análise dos experimentos, descrevendo as observações da comparação (e.g. qualidade de resposta, tempo de execução) 

- estrutura 
    - introdução ao problema
    - descrição dos métodos e métricas usadas
    - descrição da implementação
    - descrição dos experimentos, incluindo as bases de dados
    - apresentação e análise dos resultados
    - conclusão
